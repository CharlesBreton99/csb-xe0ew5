{"version":3,"sources":["App.tsx","index.tsx"],"names":["DefaultScale","Vector3","BiggerScale","SpinningBox","props","boxRef","useRef","useState","clicked","setClicked","useClick","hovered","setHovered","useHover","useBeforeRender","scene","current","deltaTimeInMillis","getEngine","getDeltaTime","rotation","y","Math","PI","name","ref","size","position","scaling","diffuseColor","hoveredColor","color","specularColor","Color3","Black","SceneWithSpinningBoxes","antialias","adaptToDeviceRatio","canvasId","target","Zero","alpha","beta","radius","intensity","direction","Up","FromHexString","App","rootElement","document","getElementById","render"],"mappings":"sNAeMA,EAAe,IAAIC,IAAQ,EAAG,EAAG,GACjCC,EAAc,IAAID,IAAQ,KAAM,KAAM,MAStCE,EAAc,SAACC,GAEnB,IAAMC,EAASC,iBAAa,MAE5B,EAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACAC,aAAS,kBAAMD,GAAW,SAACD,GAAD,OAAcA,OAAUH,GAElD,MAA8BE,oBAAS,GAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KACAC,aACE,kBAAMD,GAAW,MACjB,kBAAMA,GAAW,KACjBP,GAcF,OATAS,aAAgB,SAACC,GACf,GAAIV,EAAOW,QAAS,CAElB,IAAIC,EAAoBF,EAAMG,YAAYC,eAC1Cd,EAAOW,QAAQI,SAASC,GALhB,EAMC,GAAMC,KAAKC,GAAK,GAAKN,EAAoB,SAKpD,qBACEO,KAAMpB,EAAMoB,KACZC,IAAKpB,EACLqB,KAAM,EACNC,SAAUvB,EAAMuB,SAChBC,QAASpB,EAAUN,EAAcF,EALnC,SAOE,kCACEwB,KAAI,UAAKpB,EAAMoB,KAAX,QACJK,aAAclB,EAAUP,EAAM0B,aAAe1B,EAAM2B,MACnDC,cAAeC,IAAOC,aAMjBC,EAAyB,kBACpC,cAAC,IAAD,CAAQC,WAAS,EAACC,oBAAkB,EAACC,SAAS,iBAA9C,SACE,eAAC,IAAD,WACE,iCACEd,KAAK,UACLe,OAAQtC,IAAQuC,OAChBC,MAAOnB,KAAKC,GAAK,EACjBmB,KAAMpB,KAAKC,GAAK,EAChBoB,OAAQ,IAEV,kCACEnB,KAAK,SACLoB,UAAW,GACXC,UAAW5C,IAAQ6C,OAErB,cAAC,EAAD,CACEtB,KAAK,OACLG,SAAU,IAAI1B,KAAS,EAAG,EAAG,GAC7B8B,MAAOE,IAAOc,cAAc,WAC5BjB,aAAcG,IAAOc,cAAc,aAErC,cAAC,EAAD,CACEvB,KAAK,QACLG,SAAU,IAAI1B,IAAQ,EAAG,EAAG,GAC5B8B,MAAOE,IAAOc,cAAc,WAC5BjB,aAAcG,IAAOc,cAAc,mBAM5B,SAASC,IACtB,OAAO,cAAC,EAAD,IC/FT,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,iBAAO,cAACJ,EAAD,IAASC,K","file":"static/js/main.2689a290.chunk.js","sourcesContent":["import \"./styles.css\";\n\nimport React, { useRef, useState } from \"react\";\nimport {\n  Engine,\n  Scene,\n  useBeforeRender,\n  useClick,\n  useHover\n} from \"react-babylonjs\";\n\nimport { Mesh } from \"@babylonjs/core/Meshes/mesh\";\nimport { Vector3 } from \"@babylonjs/core/Maths/math.vector\";\nimport { Color3 } from \"@babylonjs/core/Maths/math.color\";\n\nconst DefaultScale = new Vector3(1, 1, 1);\nconst BiggerScale = new Vector3(1.25, 1.25, 1.25);\n\ntype SpinningBoxProps = {\n  name: string;\n  position: Vector3;\n  hoveredColor: Color3;\n  color: Color3;\n};\n\nconst SpinningBox = (props: SpinningBoxProps) => {\n  // access Babylon scene objects with same React hook as regular DOM elements\n  const boxRef = useRef<Mesh>(null);\n\n  const [clicked, setClicked] = useState(false);\n  useClick(() => setClicked((clicked) => !clicked), boxRef);\n\n  const [hovered, setHovered] = useState(false);\n  useHover(\n    () => setHovered(true),\n    () => setHovered(false),\n    boxRef\n  );\n\n  // This will rotate the box on every Babylon frame.\n  const rpm = 5;\n  useBeforeRender((scene) => {\n    if (boxRef.current) {\n      // Delta time smoothes the animation.\n      var deltaTimeInMillis = scene.getEngine().getDeltaTime();\n      boxRef.current.rotation.y +=\n        (rpm / 60) * Math.PI * 2 * (deltaTimeInMillis / 1000);\n    }\n  });\n\n  return (\n    <box\n      name={props.name}\n      ref={boxRef}\n      size={2}\n      position={props.position}\n      scaling={clicked ? BiggerScale : DefaultScale}\n    >\n      <standardMaterial\n        name={`${props.name}-mat`}\n        diffuseColor={hovered ? props.hoveredColor : props.color}\n        specularColor={Color3.Black()}\n      />\n    </box>\n  );\n};\n\nexport const SceneWithSpinningBoxes = () => (\n  <Engine antialias adaptToDeviceRatio canvasId=\"babylon-canvas\">\n    <Scene>\n      <arcRotateCamera\n        name=\"camera1\"\n        target={Vector3.Zero()}\n        alpha={Math.PI / 2}\n        beta={Math.PI / 4}\n        radius={8}\n      />\n      <hemisphericLight\n        name=\"light1\"\n        intensity={0.7}\n        direction={Vector3.Up()}\n      />\n      <SpinningBox\n        name=\"left\"\n        position={new Vector3(-2, 0, 0)}\n        color={Color3.FromHexString(\"#EEB5EB\")}\n        hoveredColor={Color3.FromHexString(\"#C26DBC\")}\n      />\n      <SpinningBox\n        name=\"right\"\n        position={new Vector3(2, 0, 0)}\n        color={Color3.FromHexString(\"#C8F4F9\")}\n        hoveredColor={Color3.FromHexString(\"#3CACAE\")}\n      />\n    </Scene>\n  </Engine>\n);\n\nexport default function App() {\n  return <SceneWithSpinningBoxes />;\n}\n","import { render } from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}